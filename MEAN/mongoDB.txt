// 1. Create a database called 'my_first_db'.
use my_first_db

// 2.Create students collection.
db.createCollection("students")

// 3. Each document you insert into this collection should have the following format: {name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}}

// 4. Create 5 students with the appropriate info.
db.students.insert({name: "Ted", home_state:"Illinois", lucky_number:64, birthday: {month:6, day:28, year:1991}})
db.students.insert({name: "Marek", home_state:"Illinois", lucky_number:3, birthday: {month:9, day:17, year:1992}})
db.students.insert({name: "Michael", home_state:"Seattle", lucky_number:5, birthday: {month:5, day:21, year:1963}})
db.students.insert({name: "Nick", home_state:"Washington", lucky_number:10, birthday: {month:7, day:5, year:1992}})
db.students.insert({name: "Stark", home_state:"Minneapolis", lucky_number:2, birthday: {month:9, day:5, year:1991}})

// 5. Get all students.
db.students.find()

// 6. Retrieve all students who are from Illinois (Chicago Dojo) or Washington (Seattle Dojo).
db.students.find({$or: [{home_state:"Illinois"}, {home_state:"Washington"}]})

// 7. Get all students whose lucky number is:

// 7.1 Greater than 3
db.students.find({lucky_number:{$gt:3}})

// 7.2 Less than or equal to 10
db.students.find({lucky_number:{$lte:10}})

// 7.3 Between 1 and 9, inclusive
db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})

// 8. Add a field in each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.

db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})

// 9. Add some unique interests for each particular students into each of their interest arrays.
db.students.update({name: "Ted"},{$push: {interests:{$each:['games', 'sports']}}})
db.students.update({name: "Michael"},{$push: {interests:{$each:['whining', 'being DVA']}}})
db.students.update({name: "Marek"},{$push: {interests:{$each:['theater', 'singing']}}})
db.students.update({name: "Stark"},{$push: {interests:{$each:['basketball', 'lines']}}})

// 10. Add the interest 'taxes' into someone's interest array.
db.students.update({name: "Nick"},{$push: {interests: "taxes"}})

// 11. Remove the 'taxes' interest you just added.
db.students.update({name: "Nick"},{$pull: {interests: "taxes"}})

// 12. Remove all students who are from Seattle (or Washington).
db.students.remove({$or: [{home_state:"Seattle"}, {home_state:"Washington"}]})

// 13. Remove a user by name. 
db.students.remove({name:"Stark"})

// 14. Remove a student whose lucky number is greater than 5 (JUST ONE)
db.students.remove({lucky_number: {$gt:5}}, {justOne:true})

// 15. Add a field in each student collection called 'number_of_belts' and set it to 0.
db.students.update({},{$set: {"number_of_belts":0}},{multi:true})

// 16. Increment this field by 1 for all students in Illinois (Chicago Dojo).
db.students.update({home_state: "Illinois"},{$inc: {number_of_belts: 1}},{multi:true})

// 17. Rename the 'number_of_belts' field to 'belts_earned'
db.students.update({}, {$rename: {"number_of_belts":"belts_earned"}})

// 18. Remove the 'lucky_number' field.
db.students.update({}, {$unset:{lucky_number:""}},{multi:true})

// 19. Add a 'updated_on' field, and set the value as the current date.
db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})
